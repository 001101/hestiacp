#!/bin/bash
# info: add php fpm version
# options: VERSION
#
# The function checks and delete a fpm php version if not used by any domain.


#----------------------------------------------------------#
#                    Variable&Function                     #
#----------------------------------------------------------#

# Argument definition
version=$1

# Includes
source $HESTIA/func/osal.sh
source $HESTIA/func/main.sh
source $HESTIA/conf/hestia.conf


#----------------------------------------------------------#
#                    Verifications                         #
#----------------------------------------------------------#

check_args '1' "$#" 'VERSION'

php_prefix=$(osal_multiphp_php_package_prefix $version)

# Verify php version format
if [[ ! $version =~ ^[0-9]\.[0-9]+ ]]; then
    echo "The php version format is invalid, it should look like [0-9].[0-9]..."
    exit
fi

# Check if php version already exists
if [ $(osal_multiphp_fpm_isinstalled $version) ] && [ -f "$HESTIA/data/templates/web/php-fpm/PHP-${version/\./_}.tpl" ]; then
    echo "Version already installed..."
    exit
fi

# Check if php version is supported
if [ ! -f "$HESTIA_INSTALL_DIR/multiphp/$WEB_SYSTEM/PHP-${version//.}.sh" ]; then
    echo "Version is currently not supported or does not exist..."
    exit
fi

# Perform verification if read-only mode is enabled
check_hestia_demo_mode


#----------------------------------------------------------#
#                       Action                             #
#----------------------------------------------------------#

mph="$php_prefix-mbstring $php_prefix-bcmath $php_prefix-cli $php_prefix-curl
     $php_prefix-fpm $php_prefix-gd $php_prefix-intl $php_prefix-mysql
     $php_prefix-soap $php_prefix-xml $php_prefix-zip $php_prefix-mbstring
     $php_prefix-json $php_prefix-bz2 $php_prefix-pspell $php_prefix-imagick $php_prefix-pgsql
     $php_prefix-imap $php_prefix-ldap"

# Check is version is 7.1 or below to add mcrypt
if [[ `echo "$version 7.2" | awk '{print ($1 < $2)}'` == 1 ]]; then
    mph="$mph $php_prefix-mcrypt"
fi

if ! echo "$DB_SYSTEM" | grep -w 'mysql' >/dev/null; then
    mph=$(echo "$mph" | sed -e "s/$php_prefix-mysql//")
fi

if ! echo "$DB_SYSTEM" | grep -w 'pgsql' >/dev/null; then
    mph=$(echo "$mph" | sed -e "s/$php_prefix-pgsql//")
fi

# Install php packages
osal_package_preinstall
osal_execute_with_spinner osal_package_install $mph

# Check if installation was sucessfully
if [ ! $(osal_multiphp_fpm_isinstalled $version) ]; then
    echo "Installation failed, please run the following command manualy for debuging:"
    echo "$OSAL_CMD_PACKAGE_MANAGER install ${mph//\\n/ \\}"
fi

# Check if required modules for apache2 are enabled
if [ "$WEB_SYSTEM" = "apache2" ] || [ "$WEB_SYSTEM" = "httpd" ]; then
    if [ ! $(osal_apache_module_isenabled 'proxy_fcgi') ]; then
        osal_apache_module_enable 'proxy_fcgi'
    fi
    if [ ! $(osal_apache_module_isenabled 'setenvif') ]; then
        osal_apache_module_enable 'setenvif'
    fi
    $BIN/v-restart-web
fi

# Configure fpm
osal_service_enable $php_prefix-fpm > /dev/null 2>&1
pool_d=$(osal_multiphp_fpm_pool_d $version)
if [ $pool_d ]; then
    v_tpl=${version//.}
    rm -f $pool_d/*
    cp -f $HESTIA_INSTALL_DIR/php-fpm/dummy.conf $pool_d/
    sed -i "s/9999/99$v_tpl/g" $pool_d/dummy.conf       # FIXME: this'll break with PHP 10.0
fi

# Install backend template
cp -f $HESTIA_INSTALL_DIR/php-fpm/multiphp.tpl \
    $HESTIA/data/templates/web/php-fpm/PHP-${version/\./_}.tpl

#----------------------------------------------------------#
#                       Hestia                             #
#----------------------------------------------------------#

# Logging
log_history "installed php $version" '' 'admin'
log_event "$OK" "$ARGUMENTS"

exit
